{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "CookbookRepo": {
            "Description": "GitURL",
            "Type": "String",
            "Default": "https://github.com/flippyhead/chef-mongodb"
        },

        "CookbookRepoRevision": {
            "Description": "Git Revision/Tag",
            "Type": "String",
            "Default": "0.0.1"
        },

        "Route53ZoneName": {
            "Description": "Route53 zone under which to setup the DNS record.",
            "Type": "String"
        },

        "AppDomainName": {
            "Description": "Domain name to register for the app under Route53.",
            "Type": "String"
        },

        "SSLCertificateName": {
            "Description": "The SSL certificate.",
            "Type": "String"
        },

        "SshKeyName": {
            "Description": "SSH key name for EC2 instances.",
            "Type": "String"
        },

        "InstanceCount": {
            "Description": "The number of instances to launch.",
            "Type": "Number",
            "Default": 1
        },

        "InstanceType": {
            "Description": "The type of instance to launch.",
            "Type": "String",
            "Default": "t2.small"
        },

        "SecurityGroupLoadBalancer": {
            "Description": "The load balancer security group.",
            "Type": "String"
        },

        "SecurityGroupMeteorLayer": {
            "Description": "The meteor layer security group.",
            "Type": "String"
        }

    },

    "Outputs": {
        "StackId": {
            "Description": "opsworks stack id ",
            "Value": { "Ref": "MeteorStack"}
        },

        "LayerId": {
            "Description": "opsworks search layer id ",
            "Value": { "Ref": "MeteorLayer"}
        },

        "PrimaryAppId": {
            "Description": "primary app id ",
            "Value": { "Ref": "PrimaryApp"}
        },

         "SecondaryAppId": {
            "Description": "exporter app id ",
            "Value": { "Ref": "SecondaryApp"}
        }

    },

    "Resources": {

        "LoadBalancer" : {
            "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties" : {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "Listeners" : [
                    {
                        "LoadBalancerPort" : "443",
                        "InstancePort" : "80",
                        "Protocol" : "SSL",
                        "SSLCertificateId": {
                            "Fn::Join": ["", ["arn:aws:iam::", { "Ref": "AWS::AccountId" }, ":server-certificate/", { "Ref" : "SSLCertificateName" }]]
                        }
                    },
                    {
                        "LoadBalancerPort" : "80",
                        "InstancePort" : "80",
                        "Protocol" : "HTTP"
                    }
                ],
                "HealthCheck" : {
                    "Target" : "TCP:80",
                    "HealthyThreshold" : "2",
                    "UnhealthyThreshold" : "8",
                    "Interval" : "30",
                    "Timeout" : "20"
                },
                "SecurityGroups": [
                    {"Ref": "SecurityGroupLoadBalancer"}
                ]
            }
        },

        "DNSRecord": {
            "Type" : "AWS::Route53::RecordSet",
            "Properties" : {
                "HostedZoneName" : {"Ref": "Route53ZoneName"},
                "Type" : "CNAME",
                "Name" : { "Ref": "AppDomainName"},
                "ResourceRecords" : [ {"Fn::GetAtt":["LoadBalancer","DNSName"]}],
                "TTL" : "30"
            }
        },

        "ELBAttachment" : {
            "Type" : "AWS::OpsWorks::ElasticLoadBalancerAttachment",
            "Properties" : {
                "ElasticLoadBalancerName" : { "Ref" : "LoadBalancer" },
                "LayerId" : { "Ref" : "MeteorLayer" }
            }
        },

        "MeteorStack": {
            "Type": "AWS::OpsWorks::Stack",
            "Properties": {
                "Name": {
                    "Ref": "AWS::StackName"
                },
                "CustomJson": {
                    "opsworks_nodejs":{
                        "version":"0.10.38"
                    },
                    "deploy": {
                        "primary-app": {
                            "nodejs": {
                                "port": 80
                            },
                            "environment_variables": {
                                "METEOR_SETTINGS": "{}"
                            }
                        },
                        "secondary-app": {
                            "nodejs": {
                                "port": 8081
                            },
                            "environment_variables": {
                                "METEOR_SETTINGS": "{}"
                            }
                        }
                    }
                },
                "ServiceRoleArn": {
                    "Fn::Join": ["", ["arn:aws:iam::", { "Ref": "AWS::AccountId" }, ":role/aws-opsworks-service-role"]]
                },
                "DefaultInstanceProfileArn": {
                    "Fn::Join": ["", ["arn:aws:iam::", { "Ref": "AWS::AccountId" }, ":instance-profile/aws-opsworks-ec2-role"]]
                },
                "ConfigurationManager": {
                    "Name": "Chef",
                    "Version": "11.10"
                },
                "ChefConfiguration": {
                    "BerkshelfVersion": "3.1.3",
                    "ManageBerkshelf": true
                },
                "DefaultOs": "Amazon Linux 2015.03",
                "DefaultRootDeviceType": "ebs",
                "DefaultSshKeyName": { "Ref": "SshKeyName" },
                "UseCustomCookbooks": false,
                "UseOpsworksSecurityGroups": false,
                "CustomCookbooksSource": {
                    "Type": "git",
                    "Url": {
                        "Ref": "CookbookRepo"
                    },
                    "Revision": { "Ref": "CookbookRepoRevision" }
                }
            }
        },

        "MeteorLayer": {
            "Type": "AWS::OpsWorks::Layer",
            "Properties": {
                "StackId": {
                    "Ref": "MeteorStack"
                },
                "Name": "Meteor",
                "Type": "nodejs-app",
                "Shortname": "meteor",
                "EnableAutoHealing": false,
                "AutoAssignElasticIps": false,
                "AutoAssignPublicIps": true,
                "CustomSecurityGroupIds": [
                    {"Ref": "SecurityGroupMeteorLayer"}
                ]
            }
        },

        "PrimaryApp": {
            "Type":"AWS::OpsWorks::App",
            "Properties": {
                "Type": "nodejs",
                "Name": "Primary Application",
                "Shortname": "primary-app",
                "StackId": {
                    "Ref": "MeteorStack"
                },
                "AppSource": {
                    "Username": "AKDIKDSKSKEWS",
                    "Password": "x6gYSTr+qDSKDFJSLdksldjfLAKDjdRE8mKi1bAZXm",
                    "Type": "s3",
                    "Url":"https://s3-us-west-2.amazonaws.com/primary-builds/primary-app.tar.gz"
                }
            }
        },

        "SecondaryApp": {
            "Type":"AWS::OpsWorks::App",
            "Properties": {
                "Type": "nodejs",
                "Name": "Secondary App",
                "Shortname": "secondary-app",
                "StackId": {
                    "Ref": "MeteorStack"
                },
                "AppSource": {
                    "Username": "AKDIKDSKSKEWS",
                    "Password": "x6gYSTr+qDSKDFJSLdksldjfLAKDjdRE8mKi1bAZXm",
                    "Type": "s3",
                    "Url":"https://s3-us-west-2.amazonaws.com/secondary-builds/secondary-app.tar.gz"
                }
            }
        }

    }
}
